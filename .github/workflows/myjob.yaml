name: Build & Push to GHCR, Modify YAML, Commit Back
on:
  push:
    branches:
      - main  
permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

env:
  VERSION_A: 1 
  VERSION_B: 0 
  VERSION_C: 1
jobs:
  build-and-push-ghcr:
    runs-on: ubuntu-latest

    steps:
      - name: Set TAG variable
        run: |
          echo "TAG=${VERSION_A}.${VERSION_B}.${VERSION_C}" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract short commit SHA
        id: vars
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry 
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/myapp
          docker build -t $IMAGE_NAME:${{ env.TAG }}_${{ env.COMMIT_SHA }} -f app/Dockerfile app

      - name: Push image to github container registry
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/myapp
          docker push $IMAGE_NAME:${{ env.TAG }}_${{ env.COMMIT_SHA }}
          echo "Image name is --->"  $IMAGE_NAME:${{ env.TAG }}_${{ env.COMMIT_SHA }}

      - name: Modify image name and tag in values.yaml, also pass env variable in python web app, for visualize in http responce 
        run: |
          yq e '.image.repository = "ghcr.io/${{ github.repository }}/myapp"' -i k8s/python-web-app-chart/values.yaml
          yq e '.image.tag =  "'"${{ env.TAG }}_${{ env.COMMIT_SHA }}"'"' -i k8s/python-web-app-chart/values.yaml
          yq e '.version.a = ${{ env.VERSION_A }}' -i k8s/python-web-app-chart/values.yaml 
          yq e '.version.b = ${{ env.VERSION_B }}' -i k8s/python-web-app-chart/values.yaml
          yq e '.version.c = ${{ env.VERSION_C }}' -i k8s/python-web-app-chart/values.yaml
          yq e '.version.commitSha = "${{ env.COMMIT_SHA }}"' -i k8s/python-web-app-chart/values.yaml

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@users.noreply.github.com"
          git config --global user.name "github-actions"

      - name: Commit and push YAML update
        run: |
          git add k8s/python-web-app-chart/values.yaml
          git commit -m "This is automated commit, from runner, update values.yaml with new version ${{ env.TAG }}_${{ env.COMMIT_SHA }} [skip ci]" || echo "No changes"
          git push

#Work with helm packaging, and pushing it into github package registry
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Log in to GHCR via Helm
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Package Helm chart
        run: |
          cd k8s
          helm package python-web-app-chart

      - name: Push Helm chart to GHCR
        run: |
          cd k8s
          CHART_PACKAGE=$(ls *.tgz)
          helm push $CHART_PACKAGE oci://ghcr.io/${{ github.repository_owner }}
